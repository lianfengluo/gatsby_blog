{"version":3,"sources":["webpack:///./src/templates/AllPosts.tsx"],"names":["AllPosts","pageContext","data","currentPage","numPages","isFirst","isLast","previousPage","nextPage","posts","allMdx","edges","textAlign","margin","color","map","post","key","node","frontmatter","slug","date","title","excerpt","prevPage","pageQuery"],"mappings":"6FAAA,kGA4EeA,UAzCyB,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC9CC,EAA0BF,EAA1BE,YAAaC,EAAaH,EAAbG,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAeJ,EAAc,GAAM,EAAI,IAAxB,KAAkCA,EAAc,GAC/DK,EAAW,IAAGL,EAAc,GAE5BM,EAAeP,EAAKQ,OAAOC,MACjC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAIC,UAAU,SAASC,OAAO,cAA9B,kBAGA,kBAAC,IAAD,CAAGC,MAAM,QAAQF,UAAU,UAA3B,mDAGCH,EAAMM,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CACEC,IAAKD,EAAKE,KAAKC,YAAYC,KAC3BC,KAAML,EAAKE,KAAKC,YAAYE,KAC5BC,MAAON,EAAKE,KAAKC,YAAYG,MAC7BC,QAASP,EAAKE,KAAKC,YAAYI,QAC/BH,KAAMJ,EAAKE,KAAKC,YAAYC,WAIpB,IAAbhB,GACC,kBAAC,IAAD,CACEC,QAASA,EACTC,OAAQA,EACRkB,SAAUjB,EACVC,SAAUA,MASb,IAAMiB,EAAY","file":"component---src-templates-all-posts-tsx-271162c65d92da1c5413.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport {\n  Container,\n  Content,\n  ContentCard,\n  FeatureImage,\n  Pagination,\n  SEO,\n} from 'src/components';\nimport { H1, P } from 'src/wrappers';\n\ninterface AllPostsItf {\n  pageContext: {\n    limit: number;\n    skip: number;\n    numPages: number;\n    currentPage: number;\n  };\n  data: {\n    allMdx: {\n      edges: {\n        node: {\n          frontmatter: {\n            slug: string;\n            title: string;\n            excerpt: string;\n            date: string;\n          };\n        };\n      }[];\n    };\n  };\n}\n\nconst AllPosts: React.FC<AllPostsItf> = ({ pageContext, data }) => {\n  const { currentPage, numPages } = pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const previousPage = currentPage - 1 === 1 ? '/' : `/${currentPage - 1}`;\n  const nextPage = `${currentPage + 1}`;\n\n  const posts: any[] = data.allMdx.edges;\n  return (\n    <Container>\n      <SEO />\n      <FeatureImage />\n      <Content>\n        <H1 textAlign=\"center\" margin=\"0 0 1rem 0\">\n          Richard's Blog\n        </H1>\n        <P color=\"dark2\" textAlign=\"center\">\n          This is the blog built using gatsby/typescript.\n        </P>\n        {posts.map((post) => (\n          <ContentCard\n            key={post.node.frontmatter.slug}\n            date={post.node.frontmatter.date}\n            title={post.node.frontmatter.title}\n            excerpt={post.node.frontmatter.excerpt}\n            slug={post.node.frontmatter.slug}\n          ></ContentCard>\n        ))}\n      </Content>\n      {numPages !== 1 && (\n        <Pagination\n          isFirst={isFirst}\n          isLast={isLast}\n          prevPage={previousPage}\n          nextPage={nextPage}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default AllPosts;\n\nexport const pageQuery = graphql`\n  query AllPostsQuery($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      skip: $skip\n      limit: $limit\n    ) {\n      edges {\n        node {\n          frontmatter {\n            slug\n            title\n            excerpt\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}